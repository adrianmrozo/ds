Project Report 2


---------
Task 1
 

1.) We currently have 2 branches, that we treat as master file. The one called "main" is the default branch on github.
The other one called "master" contains the same information and needs to be set as default.
Repository Owner needs to follow the few simple steps in 
https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/changing-the-default-branch
CHECK

After we will have done that, we will delete the "main" branch.


2.) Additionally there are two test branches. "testbranch" and "workon".
We want to delete the "testbranch" and keep "workon" as a testbranch.


3.) Specification of the .gitignore file

All file types, respectively certain files within the local directory that are listed in the .gitignore file 
will be ignored when updating github to the status of the local directory. So we need to think about 
which files and filetypes we actually want to be displayed and shared on github. With our local directory 
growing (e.g. saving a trained CNN, adding text files with notes, ect.) and the premise to keep our respository 
nice and clean, we do not want all those newly added files to be uploaded into github.
Thus, with more and more files/file types to be stored locally and us not wanting those files to be shared, we have to 
update the .gitignore file on a regular basis.

In particular: 
- We ignore the our and all saved and trained CNN. We use: *.h5
- As specifically asked for in the instructions of this project, we want to avoid all pictures, video and music.
restict some file types representively. We use: for music: *.mp3, *.wav, *.flac 
                                                for videos: *.mp4, *.mov, *.wmv, *.avi, 
                                                for pictures: *.jpg, *.png, *.tiff, *.gif, *.raw

We already created a .gitignore file for Milestone 1. We copied the text and created via ```git touch``` a new 
textfile. We added some wildcards for additional file types. 
CHECK

Just upload the gitignore to workon.


5.) Versioncontrol of the .gitignore - strategy
Use 4 branches within the repository: Master, workon_shared, user_1, user_2
Like this every team member can work on his own, seperated branch. Additionally, files that need to be shared
can be uploaded in the workon branch. Whenever files are being pushed into the master branch, a pull request 
needs to be confirmed by the other team member. 
Therefore we create the two new branches: workLK and workAM.

6.) Prohibit direct uploads to the master branch: owner of the repository has to follow these steps: 
https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/enabling-required-status-checks
CHECK



How to create a new branch and push it to github
´´´
git branch <new_branch_name>
git checkout <new_branch_name>   # or both in one line $ git checkout -b <new_branch_name> 

git push --set-upstream origin <new_branch_name>

´´´

How to delete local branch
´´´
git branch -d <branch_name>
´´´

How to delete remote branch
´´´´
git push origin --delete remoteBranchName
´´´

How to pull default branch
´´´
git init
git pull <url_rep>
´´´


How to pull just a single branch from github: 
```
git clone <url_rep> --branch <branchname>
```
